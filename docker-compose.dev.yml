volumes:
  database-volume:
  upload:

services:
  database:
    image: postgres
    container_name: database-dev
    restart: always
    volumes:
      - database-volume:/var/lib/postgresql/data
      - ./backend/scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-dev
    ports:
      - "8080:8080"
    env_file: ./.env
    volumes:
      - ./backend:/app
      - /app/node_modules
      - upload:/app/public
    environment:
      - NODE_ENV=development
      - URL=http://localhost:3000
      - DB_HOST=database
      - DB_USER=$POSTGRES_USER
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - DB_NAME=$POSTGRES_DB
      - DB_PORT=$POSTGRES_PORT
      - ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET
    depends_on:
      database:
        condition: service_healthy

  frontend:
    image: frontend:0.0.1
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    container_name: frontend-dev
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules
      - ./frontend:/app
